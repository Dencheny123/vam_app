name: STROYKA Docker CI/CD Pipeline

on:
  push:
    branches: ['dev', 'main']
    tags: ['v*.*.*']
  pull_request:
    branches: ['dev', 'main']

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
  CLIENT_IMAGE_NAME: dencheny123/stroyka-client
  SERVER_IMAGE_NAME: dencheny123/stroyka-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.CLIENT_IMAGE_NAME }}
            ${{ env.SERVER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Client Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          file: ./client/Dockerfile
          push: true
          tags: ${{ env.CLIENT_IMAGE_NAME }}:${{ steps.meta.outputs.version }},${{ env.CLIENT_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Server Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ env.SERVER_IMAGE_NAME }}:${{ steps.meta.outputs.version }},${{ env.SERVER_IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-railway:
    needs: build-and-push
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Railway Deployment
        uses: railwayapp/action@v1.2.0
        with:
          railway_token: ${{ env.RAILWAY_TOKEN }}
          service: your-service-name # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∏–º—è –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –≤ Railway
          environment: production
          # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏:
          # healthcheck_path: /health
          # healthcheck_timeout: 30
          # dockerfile: ./Dockerfile
          # context: ./

      - name: Display deployment info
        run: |
          echo "üöÑ Railway deployment initiated!"
          echo "üê≥ Client Image: ${{ env.CLIENT_IMAGE_NAME }}:latest"
          echo "üê≥ Server Image: ${{ env.SERVER_IMAGE_NAME }}:latest"
          echo "üìã Check deployment status at: https://railway.app/project/your-project-id"

  notify:
    needs: [build-and-push, deploy-railway]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Send notification
        run: |
          echo "üìä Pipeline status: ${{ job.status }}"
          echo "üîó View deployment: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "üê≥ Docker Hub images:"
          echo "   - Client: https://hub.docker.com/r/dencheny123/stroyka-client"
          echo "   - Server: https://hub.docker.com/r/dencheny123/stroyka-server"
          echo "üîê SECURITY WARNING: Credentials are exposed in workflow. Move to GitHub Secrets when possible."
          echo "üìã Next steps:"
          echo "   1. Configure Railway project: railway init && railway link"
          echo "   2. Set up environment variables in Railway dashboard"
          echo "   3. Move credentials to GitHub Secrets for security"
